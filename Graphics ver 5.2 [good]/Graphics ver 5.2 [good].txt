-------------------------------------------- SCREEN 000
( GRAPHICS VERSION 3     <10/16/84>140) 
EXIT                                    
                                        
NUMBER OF COLORS AVAILABLE DEPENDS      
ON COLORTAB; ESSENTIALLY UNLIMITED.     
                                        
GRAPHICS MODES:                         
0 = INVERT BITS ON SCREEN               
1 = SET BITS                            
2 = CLEAR BITS                          
3 = INVERSE PATTERN TO SCREEN           
4 = EOR PATTERN WITH SCREEN             
5 = PUT PATTERN ON SCREEN               
                                        
HPLOT WILL WRAP AROUND IF PLOTTING AT   
X = 279.                                
                                        
ADDRESS OF ASCII TABLE IS FOUND         
IN CONSTANT ">ASCTAB".                  
                                        
V.4 : PATBUF REDUCED TO 40 BYTES,       
FROM 320; CHARBUF MAPPED ONTO PATBUF;   
PATTERN EXPANDED LINE BY LINE,          
AS NEEDED.                     (  RLP ) 
-------------------------------------------- SCREEN 001
( HIGH-LEVEL WORDS       <10/12/84>141) 
--> EXIT                                
HCOLOR ( N -- )                         
   SET CURRENT COLOR                    
SETMODE ( N -- )                        
   SET GRAPHICS MODE; SEE SCR 140       
SETENDPTS ( X1 X2 -- )                  
   SET CURRENT X END POINTS             
HLINE ( Y -- )                          
   DRAW HORIZ LINE WITHIN CURRENT       
   X END POINTS                         
VLINE ( Y1 Y2 -- )                      
   DRAW VERTICAL LINE (OR BAR)          
   WITHIN CURRENT X END POINTS          
HPLOT ( X Y -- )                        
   PLOT POINT AT [X,Y]                  
   (DOES "SETENDPTS")                   
LINE ( X1 Y1 X2 Y2 -- )                 
   DRAW LINE FROM [X1,Y1] TO [X2,Y2]    
CDRAW ( ADDR X Y -- )                   
   DRAW CHARACTER AT [X,Y]              
<GEMIT> ( CH -- )                       
   DRAW CHARACTER AT [GX,GY]            
                               (  RLP ) 
-------------------------------------------- SCREEN 002
( LOAD BLOCK             < 2/25/85>142) 
PAGE                                    
CR ." APPLE GRAPHICS VERSION 5.2 "      
CR ." MODIFIED FOR PAI FORTH "          
   ." 2/25/85 "                         
CR ." ROBERT L. PYRON "                 
CR ." (C) 1984, 1985 BY "               
   ." PRENTICE ASSOCIATES, INC. "       
CR                                      
CR ." SEE NOTES ON SCREENS "            
   ." 140 AND 141 "                     
CR                                      
CR ." 143 LOAD ( FOR SCARSDALE ) "      
CR ." 144 LOAD ( FOR BRODY ) "          
CR CR                                   
                                        
5 ' WIDTH !                             
                                        
QUIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 003
( SCARSDALE LOAD BLOCK   < 2/24/85>143) 
CR ." LOADING FOR SCARSDALE"            
CR                                      
\  149 149 THRU   ( HIDDEN vocabulary ) 
CR 150 150 THRU     ( zero-page usage ) 
   151 155 THRU        ( yaddr, 7/mod ) 
CR 156 160 THRU            ( colortab ) 
CR 162 165 THRU              ( hcolor ) 
CR 167 178 THRU               ( hline ) 
CR 180 181 THRU            ( vline fs ) 
CR 185 187 THRU           ( scup scdn ) 
CR 190 196 THRU           ( char draw ) 
   198 204 THRU      ( char draw cntd ) 
CR 210 211 THRU               ( gemit ) 
                                        
CR CR ." Graphics Package loaded"       
CR 2BEEP QUIT                           
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 004
( BRODY LOAD BLOCK       < 2/25/85>144) 
CR ." LOADING FOR BRODY "               
CR                                      
\  149 149 THRU   ( HIDDEN vocabulary ) 
CR 150 150 THRU     ( zero-page usage ) 
   151 155 THRU        ( yaddr, 7/mod ) 
CR 156 160 THRU            ( colortab ) 
CR 162 165 THRU              ( hcolor ) 
CR 167 178 THRU               ( hline ) 
CR 180 182 THRU        ( vline fs bar ) 
CR 185 187 THRU           ( scup scdn ) 
CR 190 196 THRU           ( char draw ) 
   198 204 THRU      ( char draw cntd ) 
CR 210 219 THRU ( gemit, gexpect, etc.) 
   220 225 THRU  ( xemit, xkey, gtype ) 
\  230 242 THRU          ( hplot line ) 
                                        
                                        
CR CR ." Graphics Package loaded"       
CR 2BEEP QUIT                           
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 009
( HIDDEN                 < 2/24/85>149) 
MAIN                                    
                                        
VOCABULARY HIDDEN IMMEDIATE             
                                        
FORTH DEFINITIONS                       
                                        
APPENDIX                                
                                        
: .VOC                                  
   CURRENT @ NFA ID.                    
   CONTEXT @ NFA ID.                    
   CR ;                                 
                                        
: H'   ( look for word in HIDDEN voc. ) 
   CONTEXT @ >R    ( save search voc. ) 
   [COMPILE] HIDDEN  ( search HIDDEN )  
   [COMPILE] X'       ( find the word ) 
   R> CONTEXT !      ( restore search ) 
   ; IMMEDIATE                          
                                        
                                        
MAIN EXIT                               
                               (  RLP ) 
-------------------------------------------- SCREEN 010
( ZERO PAGE USAGE        < 2/25/85>150) 
HEX                                     
                                        
  E0 CONSTANT GBASE      ( >Y address ) 
  E2 CONSTANT GPATTERN   ( >pattern   ) 
  E4 CONSTANT GFIG       ( >fig data  ) 
                                        
  VARIABLE GMODE 5 GMODE !              
                                        
  E8 XCONST   &QUO       ( x offset )   
  EA XCONST   &REM       ( bit num. )   
                                        
DECIMAL EXIT                            
--------------------------------------- 
Locations D0 through EF are not used    
by MVP-PADS, to allow use of the        
Applesoft ram floating-point and        
graphics routines.                      
These particular loactions are part of  
the graphics scratch area.              
Note that D0 is just above the bottom   
of the Forth data stack.                
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 011
( $YADDR SUBROUTINE      < 2/25/85>151) 
\ entry: line# in X reg.                
\ exit:  address in GBASE               
\ all registers are preserved           
HEX                                     
XCODE $YADDR                            
   PHA, TXA, # C0  AND, GBASE STA,      
             .A LSR, .A LSR,            
             GBASE ORA, GBASE STA,      
        TXA, GBASE 1+ STA, .A ASL,      
             .A ASL, .A ASL,            
             GBASE 1+ ROL, .A ASL,      
             GBASE 1+ ROL, .A ASL,      
             GBASE ROR,                 
             GBASE 1+ LDA, # 1F AND,    
             # 20 ORA, GBASE 1+ STA,    
   PLA, RTS, XC;                        
                                        
DECIMAL EXIT                            
--------------------------------------- 
Note: only valid for 0 <= line# <= 191  
BOMBS FORTH when -1 or 255              
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 012
( YADDR code version     < 2/24/85>152) 
                                        
CODE YADDR ( y -- yaddr )               
     XSAVE STX, BOT LDA, TAX,           
     X' $YADDR JSR,                     
     XSAVE LDX,                         
     GBASE    LDA, BOT    STA,          
     GBASE 1+ LDA, BOT 1+ STA,          
     NEXT JMP, C;                       
                                        
EXIT                                    
--------------------------------------- 
Algorithm in Basic:                     
                                        
 INPUT Y                                
 Y1 = INT(Y /8) : YR = Y  - Y1*8        
 Y2 = INT(Y1/8) : YS = Y1 - Y2*8        
 L  = 8192 + 40*Y2 + 128*YS + 1024*YR   
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 013
( BIT MASK TABLES        < 2/24/85>153) 
HEX                                     
                                        
CREATE BITTBL                           
        1 C,  2 C,  4 C,  8 C,          
       10 C, 20 C, 40 C, 80 C,          
                                        
XCREATE LMASKS                          
       7F C, 7E C, 7C C, 78 C,          
       70 C, 60 C, 40 C, 00 C,          
                                        
XCREATE RMASKS                          
       01 C, 03 C, 07 C, 0F C,          
       1F C, 3F C, 7F C, FF C,          
                                        
DECIMAL EXIT                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 014
( $B/MOD unsigned divide < 2/25/85>154) 
\ 16bit/8bit --> 8bit,8bit              
\ entry:                                
\   "A" = lsb, "Y" = msb, "X" = divisor 
\ exit:                                 
\   quotient in &QUO, remainder in &REM 
                                        
XCODE $B/MOD N STX, ( divisor )         
            &QUO STA, ( dividend lsb )  
            PHA, TYA, PHA, ( " msb )    
            # 8 LDY,                    
 BEGIN,     &QUO ASL,                   
            .A ROL,                     
            N CMP,                      
  CS IF,    N SBC,                      
            &QUO INC,                   
  THEN,     DEY,                        
 0= UNTIL,  &REM STA,                   
            PLA, TAY, PLA, RTS, XC;     
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 015
( $7/MOD 7/MOD B/MOD     < 2/24/85>155) 
                                        
XCODE $7/MOD                            
      N STA, TXA, PHA,                  
      N LDA, # 7 LDX,                   
      X' $B/MOD JSR,                    
      PLA, TAX, RTS, XC;                
                                        
                                        
CODE B/MOD ( 16bit 8bit -- 8bit 8bit )  
      XSAVE STX,                        
      SEC LDA, SEC 1+ LDY,              
      PHA, BOT LDA, TAX, PLA,           
      X' $B/MOD JSR,                    
      XSAVE LDX,                        
      # 0 LDY,                          
      &QUO LDA, BOT STA, BOT 1+ STY,    
      &REM LDA, SEC STA, SEC 1+ STY,    
      NEXT JMP, C;                      
                                        
EXIT                                    
                                        
                                        
                                        
-------------------------------------------- SCREEN 016
( COLORTAB notes         <11/13/84>156) 
                                        
EXIT                                    
--------------------------------------- 
Each entry in COLORTAB is a nine-byte   
block.                                  
The first eight bytes form an 8-by-8    
bit array that is expanded into         
eight full scan lines.                  
The ninth byte indicates whether the    
color bit is turned on for each scan    
line.                                   
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  rlp ) 
-------------------------------------------- SCREEN 017
( COLORTAB               < 2/24/85>157) 
HEX \ solid colors                      
CREATE COLORTAB                         
                                        
\ 0=black1                              
      0000 , 0000 , 0000 , 0000 , 00 C, 
\ 1=violet                              
      5555 , 5555 , 5555 , 5555 , 00 C, 
\ 2=green                               
      AAAA , AAAA , AAAA , AAAA , 00 C, 
\ 3=white1                              
      FFFF , FFFF , FFFF , FFFF , 00 C, 
\ 4=black2                              
      0000 , 0000 , 0000 , 0000 , FF C, 
\ 5=blue                                
      5555 , 5555 , 5555 , 5555 , FF C, 
\ 6=orange                              
      AAAA , AAAA , AAAA , AAAA , FF C, 
\ 7=white2                              
      FFFF , FFFF , FFFF , FFFF , FF C, 
                                        
DECIMAL EXIT                            
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 018
( COLORTAB CONTINUED     < 2/24/85>158) 
HEX                                     
\ 8-15  small dot patterns              
\ violet & black                        
( 8 ) 1144 , 1144 , 1144 , 1144 , 00 C, 
\ violet & white                        
( 9 ) DD77 , DD77 , DD77 , DD77 , 00 C, 
\ green & black                         
( 10) 8822 , 8822 , 8822 , 8822 , 00 C, 
\ green & white                         
( 11) BBEE , BBEE , BBEE , BBEE , 00 C, 
\ blue & black                          
( 12) 1144 , 1144 , 1144 , 1144 , FF C, 
\ blue & white                          
( 13) DD77 , DD77 , DD77 , DD77 , FF C, 
\ orange & black                        
( 14) 8822 , 8822 , 8822 , 8822 , FF C, 
\ orange & white                        
( 15) BBEE , BBEE , BBEE , BBEE , FF C, 
DECIMAL EXIT                            
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 019
( COLORTAB CONTINUED     < 2/25/85>159) 
HEX                                     
                                        
\ four colors of gray                   
( 16) 33CC , 33CC , 33CC , 33CC , 00 C, 
( 17) 9966 , 9966 , 9966 , 9966 , 00 C, 
( 18) 33CC , 33CC , 33CC , 33CC , FF C, 
( 19) 9966 , 9966 , 9966 , 9966 , FF C, 
                                        
\ checks: white & xxx                   
( 20) 5F5F , 5F5F , F5F5 , F5F5 , 00 C, 
( 21) AFAF , AFAF , FAFA , FAFA , 00 C, 
( 22) 5F5F , 5F5F , F5F5 , F5F5 , FF C, 
( 23) AFAF , AFAF , FAFA , FAFA , FF C, 
                                        
\ vertical bars for Sally               
( 24) A8A8 , A8A8 , A8A8 , A8A8 , FF C, 
                                        
DECIMAL                                 
                                        
EXIT                                    
                                        
                                        
                               ( SAP  ) 
-------------------------------------------- SCREEN 020
( COLORTAB CONTINUED     <11/13/84>160) 
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 022
( $SETPATTERN VARS       < 2/24/85>162) 
                                        
\ 16384 CONSTANT PATBUF                 
         ( 42-byte buffer )             
                                        
  CREATE TEMPLATE   9 ALLOT             
                                        
                                        
  XVAR LEFT.D7     0 LEFT.D7 !          
  XVAR LEFT.MSK    0 LEFT.MSK !         
  XVAR RIGHT.D7    0 RIGHT.D7 !         
  XVAR RIGHT.MSK   0 RIGHT.MSK !        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 023
( $>PATBUF               < 2/24/85>163) 
( ALL REGISTERS PRESERVED )             
                                        
                                        
XCODE $>PATBUF                          
            PHA, TYA, PHA, TXA, PHA,    
                                        
            # 7 AND, TAX,               
                                        
            ' PATBUF LDA,               
            GPATTERN STA,               
            ' PATBUF 1+ LDA,            
            GPATTERN 1+ STA,            
                                        
            TEMPLATE 8 + LDA,           
            BITTBL ,X AND,              
 0= NOT IF, # 128 LDA,                  
 THEN,      N 1+  STA,                  
                                        
EXIT ( more ... )                       
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 024
( $>PATBUF continued     < 2/24/85>164) 
                                        
            TEMPLATE ,X LDA,            
            # 39 LDY,                   
  BEGIN,    X' RIGHT.D7 CPY,            
  0= NOT WHILE,                         
            PHA, .A LSR,                
            PLA, .A ROR,                
            DEY,                        
  REPEAT,                               
  BEGIN,    PHA, .A LSR,                
            N 1+ ORA,                   
            PATBUF ,Y STA,              
            PLA, .A ROR,                
            X' LEFT.D7 CPY,             
  0= NOT WHILE,                         
            DEY,                        
  REPEAT,                               
            PLA, TAX, PLA, TAY, PLA,    
            RTS, XC;                    
                                        
EXIT                                    
                                        
                                        
-------------------------------------------- SCREEN 025
( SETPAT SETCOLOR        < 2/24/85>165) 
                                        
VARIABLE COLOR#                         
                                        
: SETPAT ( ADDR -- )                    
         TEMPLATE 9 CMOVE ;             
                                        
: HCOLOR ( N -- )                       
         DUP COLOR# !                   
         9 * COLORTAB +                 
         SETPAT ;                       
                                        
: SETMODE  ( N -- ) GMODE ! ;           
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 027
( $INVERT SUBROUTINE     < 2/24/85>167) 
                                        
XCODE $INVERTB                          
               GBASE )Y EOR,            
               GBASE )Y STA,            
               RTS, XC;                 
                                        
XCODE $INVERT                           
  BEGIN,       GBASE )Y EOR,            
               GBASE )Y STA,            
               # 127 LDA,               
               DEY,                     
               X' LEFT.D7 CPY,          
  0= UNTIL,    X' LEFT.MSK LDA,         
               X' $INVERTB JMP, XC;     
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 028
( $TURNON SUBROUTINE     < 2/24/85>168) 
                                        
XCODE $TURNONB                          
               GBASE )Y ORA,            
               GBASE )Y STA,            
               RTS, XC;                 
                                        
XCODE $TURNON                           
               GBASE )Y ORA,            
  BEGIN,       GBASE )Y STA,            
               # 127 LDA,               
               DEY,                     
               X' LEFT.D7  CPY,         
  0= UNTIL,    X' LEFT.MSK LDA,         
               X' $TURNONB JMP, XC;     
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 029
( $TURNOFF SUBROUTINE    < 2/24/85>169) 
                                        
XCODE $TURNOFFB-                        
               # 255 EOR,               
               GBASE )Y AND,            
               GBASE )Y STA,            
               RTS, XC;                 
                                        
XCODE $TURNOFF-                         
               # 255 EOR,               
               GBASE )Y AND,            
  BEGIN,       GBASE )Y STA,            
               # 0 LDA,                 
               DEY,                     
               X' LEFT.D7 CPY,          
  0= UNTIL,    X' LEFT.MSK LDA,         
               X' $TURNOFFB- JMP, XC;   
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 030
( $INVPAT SUBROUTINE     < 2/24/85>170) 
XCODE $INVPATTB-                        
               # 128 ORA, N STA,        
               # 255 EOR, GBASE )Y AND, 
               N 1+ STA,                
               GPATTERN )Y LDA,         
               # 127 EOR,               
               N AND, N 1+ ORA,         
               GBASE )Y STA,            
               RTS, XC;                 
                                        
XCODE $INVPATT-                         
               X' $INVPATTB- JSR,       
 BEGIN,        DEY,                     
               X' LEFT.D7 CPY,          
 0= NOT WHILE, GPATTERN )Y LDA,         
               # 127 EOR,               
               GBASE )Y STA,            
 REPEAT,       X' LEFT.MSK LDA,         
               X' $INVPATTB- JMP, XC;   
                                        
EXIT                                    
                                        
                                        
-------------------------------------------- SCREEN 031
( $ANDPAT SUBROUTINE     < 2/24/85>171) 
EXIT                                    
\ probably doesn't work                 
--------------------------------------  
CODE $ANDPATB                           
                GPATTERN )Y AND,        
                GBASE )Y AND,           
                GBASE )Y STA,           
                RTS,                    
END-CODE                                
                                        
CODE $ANDPAT                            
                GPATTERN )Y AND,        
  BEGIN,        GBASE )Y AND,           
                GBASE )Y STA,           
                DEY,                    
                LEFT.D7 CPY,            
  0= NOT WHILE, GPATTERN )Y LDA,        
  REPEAT,       LEFT.MSK LDA,           
                ' $ANDPATB JMP,         
END-CODE                                
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 032
( $EORPAT SUBROUTINE     < 2/24/85>172) 
                                        
XCODE $EORPATB                          
                # 128 ORA,              
                GPATTERN )Y AND,        
                GBASE )Y EOR,           
                GBASE )Y STA,           
                RTS, XC;                
                                        
XCODE $EORPAT                           
                # 128 ORA,              
                GPATTERN )Y AND,        
  BEGIN,        GBASE )Y EOR,           
                GBASE )Y STA,           
                DEY,                    
                X' LEFT.D7 CPY,         
  0= NOT WHILE, GPATTERN )Y LDA,        
  REPEAT,       X' LEFT.MSK LDA,        
                X' $EORPATB JMP, XC;    
                                        
EXIT                                    
                                        
                                        
                                        
-------------------------------------------- SCREEN 033
( FILLPAT                < 2/24/85>173) 
                                        
XCODE $FILLPATB  # 128 ORA,             
                N STA,                  
                GBASE )Y LDA,           
                GPATTERN )Y EOR,        
                N AND,                  
                GBASE )Y EOR,           
                GBASE )Y STA,           
                RTS, XC;                
                                        
XCODE $FILLPAT                          
                X' $FILLPATB JSR,       
  BEGIN,        DEY,                    
                X' LEFT.D7 CPY,         
  0= NOT WHILE, GPATTERN )Y LDA,        
                GBASE )Y STA,           
  REPEAT,       X' LEFT.MSK LDA,        
                X' $FILLPATB JMP, XC;   
                                        
EXIT                                    
                                        
                                        
                                        
-------------------------------------------- SCREEN 034
( $D-HLINE               < 2/24/85>174) 
                                        
XCODE $D-HLINE                          
             PHA,                       
             GMODE LDA, N STA, N INC,   
             PLA,                       
             N DEC,                     
    0= IF,   X' $INVERTB  JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $TURNONB  JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $TURNOFFB- JMP,         
    THEN,    N DEC,                     
    0= IF,   X' $INVPATTB- JMP,         
    THEN,    N DEC,                     
    0= IF,   X' $EORPATB  JMP,          
    THEN,                               
             X' $FILLPATB JMP, XC;      
                                        
EXIT                                    
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 035
( $C-HLINE               < 2/24/85>175) 
                                        
XCODE $C-HLINE                          
             PHA,                       
             GMODE LDA, N STA, N INC,   
             PLA,                       
             N DEC,                     
    0= IF,   X' $INVERT   JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $TURNON   JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $TURNOFF- JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $INVPATT- JMP,          
    THEN,    N DEC,                     
    0= IF,   X' $EORPAT   JMP,          
    THEN,                               
             X' $FILLPAT  JMP, XC;      
                                        
EXIT                                    
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 036
( $HLINEB $HLINE         < 2/24/85>176) 
                                        
XCODE $HLINEB                           
  # 192 CPX, CS IF, RTS, THEN,          
  X' RIGHT.MSK LDA,                     
  X' RIGHT.D7 LDY,                      
  # 40 CPY, CS IF, RTS, THEN,           
  X' LEFT.D7 CPY, CS NOT IF, RTS, THEN, 
  0= IF, X' LEFT.MSK  AND,              
         X' $D-HLINE JMP,               
  ELSE,  X' $C-HLINE JMP,               
  THEN,  XC;                            
                                        
XCODE $HLINE                            
         # 192 CPX, CS IF, RTS, THEN,   
         X' $>PATBUF JSR,               
         X' $YADDR JSR,                 
         X' $HLINEB JMP, XC;            
                                        
EXIT                                    
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 037
( HLINEB  HLINE          < 2/24/85>177) 
\ HLINE :                               
\  draw horizontal line                 
\  within current end points            
\  "X" = y line #                       
                                        
CODE HLINE ( y -- )                     
      XSAVE STX, BOT LDA, TAX,          
      X' $HLINE JSR,                    
      XSAVE LDX, POP JMP, C;            
                                        
\ HLINEB :                              
\  draw horizontal line                 
\  when pattern address                 
\  {GPATTERN} has been                  
\  previously computed                  
                                        
CODE HLINEB ( y -- )                    
      TXA, PHA, BOT LDA, TAX,           
      X' $YADDR JSR,                    
      X' $HLINEB JSR,                   
      PLA, TAX, POP JMP, C;             
                                        
EXIT                           (  RLP ) 
-------------------------------------------- SCREEN 038
( SETENDPTS              < 2/24/85>178) 
                                        
: SETENDPTS ( X1 X2 -- )                
      DDUP > IF SWAP THEN               
                                        
      0 MAX 279 MIN                     
      7 /MOD X' RIGHT.D7 !              
      RMASKS + C@ X' RIGHT.MSK !        
                                        
      0 MAX 279 MIN                     
      7 /MOD X' LEFT.D7 !               
      LMASKS + C@ X' LEFT.MSK ! ;       
                                        
0 279 SETENDPTS                         
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 040
( VLINE                  < 2/25/85>180) 
  XVAR VY1   XVAR VY2                   
                                        
  XCODE $VLINE  TXA, PHA,               
               X' VY1 LDX,              
    BEGIN,     X' $HLINE JSR,           
               X' VY2 CPX,              
      CS NOT                            
      WHILE,   INX,                     
    REPEAT,    PLA, TAX, RTS, XC;       
                                        
\ VLINE draw vertical line/bar          
\       within current end points       
                                        
: VLINE ( y1 y2 -- )                    
   DDUP > IF SWAP THEN                  
   0 MAX 191 MIN X' VY2 !               
   0 MAX 191 MIN X' VY1 !               
   X' $VLINE CALL ;                     
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 041
( <FS> FS                < 2/25/85>181) 
                                        
\ fill screen with color                
                                        
: <FS>                                  
      FORGET-SYS                        
      0 279 SETENDPTS                   
      0 191 VLINE ;                     
                                        
: FS ( n -- ) HCOLOR <FS> ;             
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( SAP  ) 
-------------------------------------------- SCREEN 042
( VBAR BAR               < 2/25/85>182) 
                                        
: VBAR VLINE ;                          
                                        
: BAR ( width height x y -- )           
   DOVER 0= SWAP 0= OR                  
   IF    DDROP DDROP                    
   ELSE  ROT >R >R SWAP ( x w | y h )   
         DUP 0< IF OVER + 1+            
              ELSE OVER + 1-            
         THEN SETENDPTS                 
         R> R>                          
         DUP 0< IF OVER + 1+            
              ELSE OVER + 1-            
         THEN VBAR                      
   THEN ;                               
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 045
( SCRL-PARM              < 2/24/85>185) 
                                        
\ scroll points to 4-byte block         
\ top bottom left(byt) width(byt)       
                                        
\ CREATE WIN 00 C, 141 C,  2 C, 30 C,   
                                        
10 CONSTANT YDELTA                      
                                        
: SCRL-PARM ( addr -- top bot )         
   DUP     C@ SWAP      ( t adr )       
   DUP 1+  C@ SWAP      ( t b adr )     
   DUP 2+  C@ SWAP      ( t b l adr )   
   DUP 3 + C@ SWAP DROP ( t b l w )     
   OVER + RIGHT.D7 C! LEFT.D7 C!        
   127 LEFT.MSK C! 127 RIGHT.MSK C! ;   
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 046
( SCUP                   < 2/24/85>186) 
                                        
: SCUP ( win -- )                       
   SCRL-PARM ( top bottom )             
   GMODE C@ >R                          
   5 SETMODE                            
      DUP 1+ ROT YDELTA +               
      DO    I YADDR GPATTERN !          
            I YDELTA - HLINEB           
      LOOP                              
   2 SETMODE ( black )                  
      DUP 1+ YDELTA - SWAP VLINE        
   R> SETMODE ;                         
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 047
( SCDN                   < 2/24/85>187) 
                                        
: SCDN ( win -- )                       
   SCRL-PARM ( top bottom )             
   GMODE C@ >R                          
   5 SETMODE                            
      YDELTA - OVER 1- SWAP             
      DO    I YADDR GPATTERN !          
            I YDELTA + HLINEB           
      -1 +LOOP                          
   2 SETMODE ( black )                  
      DUP YDELTA + VLINE                
   R> SETMODE ;                         
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 050
( V.2 CHARACTER DRAW     < 2/25/85>190) 
                                        
WIDTH 5 MAX ' WIDTH !                   
                                        
: CTASK ;                               
                                        
EXIT                                    
--------------------------------------- 
V.2 character draw                      
      character is surrounded           
      on all sides by 1-bit boundary    
                                        
Character Format:                       
                                        
 1 byte  Width in bits                  
 1 byte  Height in scan lines           
 N bytes character data;                
         each scan line is              
         left-justified on              
         a byte boundary                
                                        
Usage:   <addr> <xpos> <ypos> CDRAW     
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 051
( CDRAW                  < 2/25/85>191) 
                                        
 2 CONSTANT CDELX   ( space between  )  
 2 CONSTANT CDELY   ( letters        )  
                                        
PATBUF CONSTANT CHARBUF                 
                                        
 XVAR CHADDR ( addr of char data )      
 XVAR CHX          ( x draw pos. )      
 XVAR CHY          ( y draw pos. )      
 XVAR CBITS ( char width in bits )      
 XVAR CBYTES    ( width in bytes )      
 XVAR CHGT     ( height in lines )      
 XVAR CPIX  ( pixel offset (draw )      
                                        
 XVAR C.RGT.D7                          
 XVAR C.RGT.MSK                         
EXIT                                    
--------------------------------------- 
CDELX and CDELY are used by <GEMIT>     
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 052
( $CSHIFT                < 2/25/85>192) 
XCODE $CSHIFT   TXA, PHA, TYA, PHA,     
               X' CPIX LDX, INX,        
 BEGIN,        DEX,                     
 0< NOT WHILE, X' LEFT.D7 LDY,          
               DEY, CLC, PHP,           
  BEGIN,       INY,                     
               CHARBUF ,Y LDA,          
               PLP, .A ROL, PHA,        
               # 127 AND, N STA,        
               GBASE )Y LDA,            
               # 128 AND, N ORA,        
               CHARBUF ,Y STA,          
               PLA, .A ASL, PHP,        
               X' C.RGT.D7 CPY,         
  0= UNTIL,    PLP,                     
 REPEAT,   X' C.RGT.MSK LDA, # 128 ORA, 
               CHARBUF ,Y AND,          
               CHARBUF ,Y STA,          
               PLA, TAY, PLA, TAX,      
               RTS, XC;                 
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 053
( $CHLIN                 < 2/25/85>193) 
                                        
XCODE $CHLIN                            
                  TYA, PHA,             
                  X' $YADDR JSR,        
                  GMODE LDA, # 3 CMP,   
 CS IF,           # 39 LDY,             
  BEGIN,          GBASE )Y LDA,         
                  # 128 AND,            
                  CHARBUF ,Y STA,       
                  X' C.RGT.D7 CPY,      
  0= NOT WHILE,   DEY,                  
  REPEAT,         X' LEFT.D7 LDA, CLC,  
                  X' CBYTES ADC,        
                  X' C.RGT.D7 CMP,      
  CS IF,          X' C.RGT.D7 LDY,      
  ELSE,           TAY,                  
  THEN,                                 
                                        
EXIT ( more ... )                       
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 054
( $CHLIN cont'd          < 2/25/85>194) 
                                        
( continued )                           
                                        
  BEGIN,          GFIG )Y LDA,          
                  CHARBUF ,Y STA,       
                  X' LEFT.D7 CPY,       
  0= NOT WHILE,   DEY,                  
  REPEAT,                               
                  X' $CSHIFT JSR,       
                                        
                  X' CBYTES LDA, CLC,   
                  GFIG ADC,             
                  GFIG STA,             
   CS IF,         GFIG 1+ INC,          
   THEN,                                
 THEN,                                  
                  X' $HLINEB JSR,       
                  PLA, TAY, RTS, XC;    
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 055
( $CLRLIN                < 2/25/85>195) 
                                        
XCODE $CLRLIN                           
               TYA, PHA,                
               X' $YADDR JSR,           
               X' RIGHT.D7 LDY,         
 BEGIN,        GBASE )Y LDA,            
               # 128 AND,               
               CHARBUF ,Y STA,          
               X' LEFT.D7 CPY,          
 0= NOT WHILE, DEY,                     
 REPEAT,                                
               X' $HLINEB JSR,          
               PLA, TAY,                
               RTS, XC;                 
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 056
( $CDRAW                 < 2/25/85>196) 
                                        
XCODE $CDRAW       TXA, PHA, TYA, PHA,  
                  ' CDELY LDA,          
  0< NOT IF,                            
    0= NOT IF,    X' CHY LDX,           
                  X' $CLRLIN JSR,       
                  INX,                  
  THEN, THEN,                           
                  X' CHGT LDY, INY,     
  BEGIN,          DEY,                  
  0= NOT WHILE,                         
                  X' $CHLIN JSR,        
                  INX,                  
  REPEAT,                               
                  ' CDELY LDA,          
  0< NOT IF,      # 2 CMP,              
    CS IF,        X' $CLRLIN JSR,       
  THEN, THEN,     PLA, TAY, PLA, TAX,   
                  RTS, XC;              
                                        
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 058
( CD-INIT                < 2/25/85>198) 
   XVAR &GFIG   XVAR &FOO               
                                        
CODE CD-INIT ( addr x y -- addr )       
               # 0 LDY,                 
               BOT 1+ LDA,              
 0= NOT IF,    TYA,                     
 ELSE,         BOT LDA, # 192 CMP,      
  CS IF,       # 192 LDA,               
 THEN, THEN, X' CHY STA, X' CHY 1+ STY, 
               INX, INX,                
               BOT 1+ LDA,              
 0< IF,      X' CHX STY, X' CHX 1+ STY, 
 ELSE,         # 1 CMP,                 
   CS IF,      BOT LDA, # 24 CMP,       
   THEN,                                
   CS IF,      # 1 LDA, X' CHX 1+ STA,  
               # 23 LDA, X' CHX STA,    
   ELSE,       BOT LDA, X' CHX STA,     
               BOT 1+ LDA,              
               X' CHX 1+ STA,           
 THEN, THEN,   INX, INX,                
EXIT ( 5 more screens )                 
                               (  RLP ) 
-------------------------------------------- SCREEN 059
( CD-INIT continued      < 2/25/85>199) 
\ 1 screen preceding                    
                                        
            # 0 LDY,                    
            X' CBITS 1+ STY,            
            X' CHGT 1+ STY,             
                                        
            BOT LDA, N STA,             
               CLC, # 2 ADC,            
               X' &GFIG STA,            
            BOT 1+ LDA, N 1+ STA,       
               # 0 ADC,                 
               X' &GFIG 1+ STA,         
            N )Y LDA, X' CBITS STA,     
            INY,                        
            N )Y LDA, X' CHGT STA,      
                                        
            INX, INX,                   
                                        
EXIT ( 4 more screens )                 
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 060
( CD-INIT continued      < 2/25/85>200) 
\ 2 screens preceding                   
                                        
         XSAVE STX,                     
         X' CHX LDA, X' CHX 1+ LDY,     
            # 7 LDX,                    
            X' $B/MOD JSR,              
         &QUO LDA, X' LEFT.D7 STA,      
         &REM LDY, X' CPIX STY,         
            LMASKS ,Y LDA,              
            X' LEFT.MSK STA,            
         XSAVE LDX,                     
                                        
EXIT ( 3 more screens )                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 061
( CD-INIT continued      < 2/25/85>201) 
\ 3 screens preceding                   
                                        
            XSAVE STX,                  
            X' CHX LDA, CLC,            
               X' CBITS ADC,            
               X' &FOO STA,             
            X' CHX 1+ LDA, # 0 ADC,     
               X' &FOO 1+ STA,          
            # 1 CMP,                    
 CS IF,  X' &FOO LDA, # 24 CMP, THEN,   
 CS IF,     # 23 LDA, # 1 LDY,          
 ELSE,   X' &FOO LDA, X' &FOO 1+ LDY,   
 THEN,      # 7 LDX,                    
            X' $B/MOD JSR,              
            &QUO LDA, X' C.RGT.D7 STA,  
            &REM LDY,                   
               RMASKS ,Y LDA,           
               X' C.RGT.MSK STA,        
            XSAVE LDX,                  
                                        
EXIT --> ( 2 more screens )             
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 062
( CD-INIT continued      < 2/25/85>202) 
\ 4 screens preceding                   
                                        
            XSAVE STX,                  
            ' CDELX LDY, DEY,           
 0< IF,     # 0 LDY,                    
 THEN,      TYA, CLC,                   
            X' &FOO ADC, X' &FOO STA,   
            X' &FOO 1+ LDA, # 0 ADC,    
               X' &FOO 1+ STA,          
            # 1 CMP,                    
 CS IF,  X' &FOO LDA, # 24 CMP, THEN,   
 CS IF,     # 23 LDA, # 1 LDY,          
 ELSE,   X' &FOO LDA, X' &FOO 1+ LDY,   
 THEN,      # 7 LDX,                    
            X' $B/MOD JSR,              
            &QUO LDA, X' RIGHT.D7 STA,  
            &REM LDY,                   
               RMASKS ,Y LDA,           
               X' RIGHT.MSK STA,        
            XSAVE LDX,                  
EXIT --> ( 1 more screen )              
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 063
( CD-INIT finally done!  < 2/25/85>203) 
\ 5 screens preceding                   
                                        
            XSAVE STX,                  
            X' CBITS LDA,               
            CLC, # 6 ADC,               
 CS IF,     # 1 LDY,                    
 ELSE,      # 0 LDY,                    
 THEN,      # 7 LDX,                    
            X' $B/MOD JSR,              
            &QUO LDA, X' CBYTES STA,    
            SEC, X' &GFIG LDA,          
             X' LEFT.D7 SBC, GFIG STA,  
            X' &GFIG 1+ LDA, # 0 SBC,   
               GFIG 1+ STA,             
            ' CHARBUF LDA,              
               GPATTERN STA,            
            ' CHARBUF 1+ LDA,           
               GPATTERN 1+ STA,         
            XSAVE LDX,                  
            NEXT JMP, C;                
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 064
( CDRAW                  < 2/25/85>204) 
                                        
: CDRAW ( addr x y -- )                 
         CD-INIT                        
         X' $CDRAW CALL ;               
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 070
( ASCTAB                 < 2/25/85>210) 
                                        
: GTASK ;                               
                                        
CREATE ASCTAB  1624 ALLOT               
                                        
CR CR ." No font loaded into ASCTAB "   
CR CR 2BEEP                             
                                        
                                        
WIDTH 5 ' WIDTH !                       
   ASCTAB 262 + @ CONSTANT CMAXX        
   ASCTAB 258 + @ CONSTANT CMAXY        
' WIDTH !                               
                                        
: >COFFSET 2* ASCTAB + ;                
: >CDATA >COFFSET @ ASCTAB + 270 + ;    
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 071
( <GEMIT>                < 2/25/85>211) 
                                        
VARIABLE GX      ( current char )       
VARIABLE GY      ( position )           
                                        
: !CURSOR ( x y -- ) GY ! GX ! ;        
: @CURSOR ( -- x y ) GX @ GY @ ;        
                                        
: <GEMIT> ( CH -- )                     
   DUP 128 <                            
   IF DUP >COFFSET @                    
      IF DUP >CDATA                     
         DUP @CURSOR CDRAW              
         C@ CDELX + GX +!               
   THEN THEN DROP ;                     
                                        
                                        
EXIT                                    
--------------------------------------  
does not recognize carriage return,     
line feed, back space, etc.             
clips at right and bottom of screen     
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 072
( MARGINS !CURSOR        < 2/25/85>212) 
                                        
: GETMODE GMODE C@ ;                    
                                        
VARIABLE LMARG    0  LMARG !            
VARIABLE RMARG  279  RMARG !            
VARIABLE TMARG    0  TMARG !            
VARIABLE BMARG  191  BMARG !            
                                        
: !XY1 ( x1 y1 -- ) TMARG ! LMARG ! ;   
                                        
: !XY2 ( x2 y2 -- ) BMARG ! RMARG ! ;   
                                        
: !WINDOW ( x1 y1 x2 y2 -- )            
      !XY2 !XY1 ;                       
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 073
( GHOME GPAGE CLW        < 2/25/85>213) 
                                        
: GHOME  LMARG @ TMARG @ !CURSOR ;      
                                        
( clear window )                        
                                        
: CLW    GETMODE 2 SETMODE              
         LMARG @ RMARG @ SETENDPTS      
         TMARG @ BMARG @ VBAR           
         SETMODE ;                      
                                        
: GPAGE  GHOME CLW ;                    
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 074
( GCR GKEY               < 2/25/85>214) 
                                        
: KDELAY                                
   400 0 DO QTERM IF LEAVE THEN LOOP ;  
                                        
:  GCUR  GETMODE 0 SETMODE              
         BL >CDATA                      
         DUP @CURSOR CDRAW  KDELAY      
         DUP @CURSOR CDRAW  KDELAY      
         DROP SETMODE ;                 
                                        
: GCR    LMARG @ GX !                   
         CMAXY CDELY + GY +! ;          
                                        
: GKEY ( -- ch )                        
   BEGIN GCUR QTERM UNTIL <KEY> ;       
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 075
( <GBK> GPUTC            < 2/25/85>215) 
                                        
: <GBK> ( addr pos ch -- addr pos )     
      GETMODE >R 2 SETMODE              
      DROP DUP 0>                       
      IF 1- DDUP +                      
         DUP C@                         
         BL ROT C!                      
         DUP >CDATA C@ CDELX +          
            NEGATE GX +!                
            GX @ >R                     
         <GEMIT>                        
            R> GX !                     
      ELSE BEEP THEN                    
      R> SETMODE ;                      
                                        
: GPUTC ( addr pos ch -- addr pos )     
      DUP <GEMIT>                       
      3 PICK 3 PICK + C! 1+ ;           
                                        
                                        
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 076
( GCTRL GBLANK           < 2/25/85>216) 
                                        
VARIABLE ?ESCAPE                        
                                        
: GCTRL ( addr pos ch -- addr pos )     
      DROP BEEP ;                       
                                        
: GBLANK ( addr pos ch -- addr pos )    
      OVER 0>                           
      IF GPUTC ELSE GCTRL THEN ;        
                                        
                                        
\ GEXPECT is done when either           
\ Return or Escape is pressed           
                                        
: ?GDONE ( addr pos ch -- addr pos ch ) 
      DUP 27 = ?ESCAPE !                
      DUP 27 = OVER 13 = OR ;           
                                        
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 077
( GEXPECT                < 2/25/85>217) 
                                        
: GEXPECT ( addr count -- )             
   DDUP BL FILL ( count ) >R            
   0  BEGIN                             
         GKEY ?GDONE NOT                
      WHILE                             
         DUP 8 = OVER 127 = OR          
            IF <GBK>  ELSE              
         DUP BL <                       
            IF GCTRL  ELSE              
         OVER R@ < NOT                  
            IF GCTRL  ELSE              
         DUP BL =                       
            IF GBLANK ELSE              
               GPUTC                    
         THEN THEN THEN THEN            
      REPEAT ( ch ) DROP                
     R> DROP DDROP ;                    
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 078
( GINPUT TEST            < 2/25/85>218) 
                                        
: GEMIT <GEMIT> ;                       
                                        
: GINPUT ( addr count -- )              
      OVER 1+ OVER GEXPECT              
      OVER 1+ SWAP -TRAILING            
      ROT C! DROP ;                     
                                        
                                        
EXIT                                    
--------------------------------------  
                                        
: TEST   PAGE 0 20 XYTAB ." TEST: "     
         1HG                            
         PAD 12 GINPUT                  
         PAD COUNT TYPE                 
         SPACE PAD COUNT . DROP ;       
: TEST2  0 0 279 191 !WINDOW GPAGE      
         GHOME                          
         26 0 DO I 65 + GEMIT LOOP ;    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 079
( GETN                   < 2/24/85>219) 
VARIABLE GVAL                           
                                        
: GETN ( min max addr count -- val )    
  >R SWAP >R SWAP >R CR                 
  ( I = min I' = max J = count )        
  ( addr ) DUP J BL FILL 0 GVAL !       
  0 BEGIN                               
     BEGIN GKEY DUP 13 = NOT            
     WHILE                              
      DUP 8 = OVER 127 = OR             
        IF <GBK> GVAL @ 10 / GVAL !     
      ELSE OVER J < NOT IF GCTRL        
      ELSE DUP ASCII 0 - DUP 10 U<      
        IF GVAL @ 10 * +  DUP I' >      
          IF DROP GCTRL                 
          ELSE GVAL ! GPUTC THEN        
      ELSE DROP GCTRL THEN THEN THEN    
     REPEAT GVAL @ I <                  
    WHILE ( 13 ) GCTRL                  
    REPEAT R> R> R> DDROP DDROP DDROP   
  GVAL @ ;                              
                                        
EXIT                           (  RLP ) 
-------------------------------------------- SCREEN 080
( XBLOCK                 < 2/25/85>220) 
                                        
\ draw a block big enough               
\ to center a character                 
                                        
: XBLOCK ( -- )                         
   GX @ CMAXX OVER + CDELX + 1-         
      SETENDPTS                         
   GY @ CMAXY OVER + CDELY + 1-         
      VBAR ;                            
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 081
( XEMIT                  < 2/25/85>221) 
                                        
\ print character in inverse            
\ and center it in a block              
                                        
: XEMIT ( ch -- )                       
   GETMODE >R                           
   GX @ >R                              
   1 SETMODE XBLOCK                     
   CMAXX CDELX + 1-                     
      OVER >CDATA C@ - 2/ GX +!         
   3 SETMODE <GEMIT>                    
   R> CMAXX + CDELX + 1+ GX !           
   R> SETMODE ;                         
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 082
( XKEY                   < 2/25/85>222) 
                                        
\ Assume character has been drawn       
\ by "XEMIT" at [GX,GY].                
\ Flash box until a key is pressed.     
                                        
: XKEY ( -- ch )                        
   GETMODE >R                           
   0 SETMODE                            
   @CURSOR                              
   BEGIN                                
         DDUP !CURSOR XBLOCK KDELAY     
         DDUP !CURSOR XBLOCK KDELAY     
         QTERM                          
   UNTIL DDROP                          
   R> SETMODE <KEY> ;                   
                                        
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 083
( GTYPE                  < 2/25/85>223) 
                                        
: <GTYPE> ( addr count -- )             
   ?DUP IF                              
      0 DO DUP I + C@ GEMIT LOOP        
   THEN DROP ;                          
                                        
: 1GTYPE ( print normal )               
   5 SETMODE <GTYPE> ;                  
                                        
: 2GTYPE ( print inverse )              
   3 SETMODE <GTYPE> 5 SETMODE ;        
                                        
: 3GTYPE ( 1st letter inverse )         
   3 SETMODE                            
      OVER C@ XEMIT                     
   5 SETMODE                            
      SWAP 1+ SWAP 1- <GTYPE> ;         
                                        
: GTYPE <GTYPE> ;                       
                                        
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 084
( G. GTAB                < 2/25/85>224) 
                                        
\ Print number on graphics screen.      
\ Does not check for stack underflow.   
                                        
: G. ( n dp -- )                        
   >R 0                                 
   <# R> ?DUP                           
      IF 0 DO # LOOP 46 HOLD THEN       
   #S #> GTYPE ;                        
                                        
                                        
\ Tab over "n" char positions.          
\ "8" has been arbitrarily chosen.      
                                        
: GTAB ( n -- )                         
   8 * GX @ + 0 MAX 279 MIN GX ! ;      
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 085
( G."                    < 2/25/85>225) 
MAIN                                    
                                        
: <G.">                                 
   R@ COUNT DUP 1+ R> + >R GTYPE ;      
                                        
APPENDIX                                
                                        
: G."                                   
   'STREAM C@ 34 =                      
   IF 1 >IN +!                          
   ELSE                                 
      STATE @ IF COMPILE <G."> THEN     
      34 WORD DUP C@ 1+                 
      OVER + C@ 34 = NOT ?STREAM        
      STATE @ IF C@ 1+ ALLOT            
         ELSE COUNT GTYPE THEN          
   THEN ; IMMEDIATE                     
                                        
MAIN EXIT                               
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 090
( $HPLOT                 < 2/25/85>230) 
\ plot point at {x,y}                   
\ entry: "X" = y coord                  
\ "A" = x coord lsb "Y" = x coord msb   
                                        
                                        
XCODE $HPLOT                            
            # 192 CPX,                  
  CS IF,    RTS,                        
  THEN,                                 
            N STA,                      
            PHA, TXA, PHA, TYA, PHA,    
            N LDA,                      
            X' $7/MOD JSR,              
            X' $YADDR JSR,              
            &QUO LDA,                   
            X' LEFT.D7 STA,             
            X' RIGHT.D7 STA,            
                                        
EXIT ( more ... )                       
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 091
( $HPLOT CONTINUED       < 2/25/85>231) 
                                        
            &REM LDY,                   
            LMASKS ,Y LDA,              
            X' LEFT.MSK  STA,           
            # 6 CPY,                    
 CS IF,     X' RIGHT.D7 INC,            
            # 0 LDY,                    
 ELSE,      INY,                        
 THEN,                                  
            RMASKS ,Y LDA,              
            X' RIGHT.MSK STA,           
            X' $HLINE JSR,              
            PLA, TAY, PLA, TAX, PLA,    
            RTS, XC;                    
                                        
EXIT                                    
--------------------------------------  
Note: will wrap around                  
      if plotting at x = 279            
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 092
( HPLOT                  < 2/25/85>232) 
                                        
CODE HPLOT ( x y -- )                   
         XSAVE STX,                     
         SEC    LDA, PHA,    ( xlo )    
         SEC 1+ LDA, TAY,    ( xhi )    
         BOT    LDA, TAX,    ( ylo )    
         PLA,                           
         X' $HPLOT JSR,                 
         XSAVE LDX,                     
         POPTWO JMP, C;                 
                                        
EXIT                                    
--------------------------------------  
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 094
( $DOT -- REVECTORABLE   < 2/25/85>234) 
VARIABLE DOTX                           
VARIABLE DOTY                           
\ VARIABLE DOTSUBR                      
                                        
CODE <1PLOT>                            
         XSAVE STX,                     
         DOTX     LDA, ( x lsb )        
         DOTX  1+ LDY, ( x msb )        
         DOTY     LDX, ( y lsb )        
         X' $HPLOT JSR,                 
         XSAVE LDX, NEXT JMP, C;        
                                        
: <DOT>                                 
   DOTX @ 279 U< DOTY @ 192 U<          
   AND IF <1PLOT> THEN ;                
                                        
: DOT ( x y -- )                        
   DOTY ! DOTX ! <DOT> ;                
                                        
EXIT                                    
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 095
( LINE -- HIGH LEVEL     < 2/25/85>235) 
                                        
WIDTH 5 MAX ' WIDTH !                   
                                        
VARIABLE LX1      VARIABLE LY1          
VARIABLE LX2      VARIABLE LY2          
VARIABLE LXTEM    VARIABLE LYTEM        
                                        
VARIABLE DELSX    VARIABLE DELDX        
VARIABLE DELSY    VARIABLE DELDY        
VARIABLE DELSE    VARIABLE DELDE        
                                        
VARIABLE DELS                           
VARIABLE DELP                           
VARIABLE LERR                           
                                        
VARIABLE DCNT                           
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 096
( $BRES                  < 2/25/85>236) 
EXIT                                    
--------------------------------------- 
\ code version                          
                                        
CODE $STRAIGHT                          
            DELSE    LDA, CLC,          
            LERR     ADC, LERR     STA, 
            DELSE 1+ LDA,               
            LERR 1+  ADC, LERR 1+  STA, 
                                        
            DELSX    LDA, CLC,          
            DOTX     ADC, DOTX     STA, 
            DELSX 1+ LDA,               
            DOTX  1+ ADC, DOTX  1+ STA, 
                                        
            DELSY    LDA, CLC,          
            DOTY     ADC, DOTY     STA, 
            DELSY 1+ LDA,               
            DOTY  1+ ADC, DOTY  1+ STA, 
                                        
            RTS,                        
END-CODE                                
                               (  RLP ) 
-------------------------------------------- SCREEN 097
( $BRES CONTINUED        < 2/25/85>237) 
EXIT                                    
--------------------------------------- 
\ code version                          
                                        
CODE $DIAGONAL                          
            DELDE    LDA, CLC,          
            LERR     ADC, LERR     STA, 
            DELDE 1+ LDA,               
            LERR 1+  ADC, LERR 1+  STA, 
                                        
            DELDX    LDA, CLC,          
            DOTX     ADC, DOTX     STA, 
            DELDX 1+ LDA,               
            DOTX  1+ ADC, DOTX  1+ STA, 
                                        
            DELDY    LDA, CLC,          
            DOTY     ADC, DOTY     STA, 
            DELDY 1+ LDA,               
            DOTY  1+ ADC, DOTY  1+ STA, 
                                        
            RTS,                        
END-CODE                                
                               (  RLP ) 
-------------------------------------------- SCREEN 098
( $BRES continued        < 2/25/85>238) 
EXIT                                    
--------------------------------------- 
\ code version                          
\ registers are *NOT* preserved         
                                        
CODE $BRES                              
            LX1     LDA, DOTX    STA,   
            LX1 1+  LDA, DOTX 1+ STA,   
            LY1     LDA, DOTY    STA,   
            LY1 1+  LDA, DOTY 1+ STA,   
                                        
            DELS    LDA, DCNT    STA,   
            DELS 1+ LDA, DCNT 1+ STA,   
                                        
            DCNT    INC,                
 0= IF,     DCNT 1+ INC,                
 THEN,                                  
                                        
--> ( more ... )                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 099
( $BRES cnt'd   <BRES>   < 2/25/85>239) 
EXIT                                    
--------------------------------------- 
\ code version continued                
                                        
 BEGIN,                                 
            ' $DOT   JSR,               
                                        
            LERR 1+  LDA,               
    0< IF,  ' $STRAIGHT JSR,            
    ELSE,   ' $DIAGONAL JSR,            
    THEN,                               
            DCNT     LDA,               
    0= IF,  DCNT 1+  DEC,               
    THEN,   DCNT     DEC,               
            DCNT 1+  LDA,               
 0< UNTIL,  RTS,                        
END-CODE                                
                                        
                                        
: <BRES>  ' $BRES CALL ;                
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 100
( BRES high level version< 2/25/85>240) 
                                        
: BRES ( -- )                           
    LX1 @ DOTX !                        
    LY1 @ DOTY !                        
    DELS @ 1+ 0 DO                      
        <DOT>                           
        LERR @ 0< IF                    
               DELSE @ LERR +!          
               DELSX @ DOTX +!          
               DELSY @ DOTY +!          
        ELSE                            
               DELDE @ LERR +!          
               DELDX @ DOTX +!          
               DELDY @ DOTY +!          
        THEN                            
    LOOP ;                              
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 101
( BRESENHAM'S ALGORITHM  < 2/25/85>241) 
                                        
: BRESENHAM ( -- )                      
      LY2 @ LY1 @ -                     
      DUP 0< IF ABS -1 ELSE 1 THEN      
      DELDY ! DELP !                    
                                        
      LX2 @ LX1 @ -                     
      DUP 0< IF ABS -1 ELSE 1 THEN      
      DELDX ! DELS !                    
                                        
      DELS @ DELP @ <                   
      IF    DELS @ DELP @ DELS ! DELP ! 
            0 DELSX ! DELDY @ DELSY !   
      ELSE  0 DELSY ! DELDX @ DELSX !   
      THEN                              
                                        
      DELP @ 2* DUP DELSE !             
      DELS @ -  DUP LERR  !             
      DELS @ -      DELDE !             
      BRES ;                            
EXIT                                    
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 102
( LINE                   < 2/25/85>242) 
                                        
: LINE ( X1 Y1 X2 Y2 -- )               
      LY2 ! LX2 ! LY1 ! LX1 !           
      BRESENHAM ;                       
                                        
: RELINE ( -- ) BRESENHAM ;             
                                        
EXIT                                    
--------------------------------------  
RELINE draws a line using the end       
points of the previous line.            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 110
( G."                    < 2/24/85>250) 
                                        
: <G.">                                 
   R@ COUNT DUP 1+ R> + >R GTYPE ;      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 111
( SCUP                   < 2/25/85>251) 
                                        
: SCUP ( win -- )                       
   SCRL-PARM ( top bottom )             
   GMODE C@ >R                          
   5 SETMODE                            
      DUP 1+ ROT YDELTA +               
      DO    I YADDR GPATTERN !          
            I YDELTA - HLINEB           
      LOOP                              
   2 SETMODE ( black )                  
      DUP 1+ YDELTA - SWAP VLINE        
   R> SETMODE ;                         
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 112
( SCDN                   < 2/25/85>252) 
                                        
: SCDN ( win -- )                       
   SCRL-PARM ( top bottom )             
   GMODE C@ >R                          
   5 SETMODE                            
      YDELTA - OVER 1- SWAP             
      DO    I YADDR GPATTERN !          
            I YDELTA + HLINEB           
      -1 +LOOP                          
   2 SETMODE ( black )                  
      DUP YDELTA + VLINE                
   R> SETMODE ;                         
                                        
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 120
( INCLR                  < 3/10/85>260) 
                                        
: TASK ;                                
                                        
: <INCLR>                               
    R> DUP 1+ >R C@ HCOLOR ;            
                                        
: INCLR                                 
    BL WORD NUMBER DROP                 
    STATE @                             
    IF COMPILE <INCLR> C,               
    ELSE HCOLOR THEN                    
    ; IMMEDIATE                         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 121
( INXY                   < 3/10/85>261) 
                                        
: <INXY>                                
    R> DUP 2+ >R @                      
    280 /MOD !CURSOR ;                  
                                        
: INXY                                  
    BL WORD NUMBER DROP                 
    BL WORD NUMBER DROP                 
    STATE @                             
    IF  280 * +                         
        COMPILE <INXY> ,                
    ELSE !CURSOR THEN                   
    ; IMMEDIATE                         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  RLP ) 
-------------------------------------------- SCREEN 122
( INBAR                  < 3/10/85>262) 
                                        
: <INBAR>                               
    R> DUP 4 + >R                       
    DUP    @ 280 /MOD                   
    ROT 2+ @ 280 /MOD                   
    BAR ;                               
                                        
: INBAR                                 
    BL WORD NUMBER DROP                 
    BL WORD NUMBER DROP                 
    BL WORD NUMBER DROP                 
    BL WORD NUMBER DROP                 
    STATE @                             
    IF  COMPILE <INBAR> DSWAP           
        280 * + ,                       
        280 * + ,                       
    ELSE BAR THEN                       
    ; IMMEDIATE                         
                                        
                                        
                                        
                                        
                                        
